{"version":3,"sources":["components/Line.js","components/lineShader/vertex.glsl","components/lineShader/fragment.glsl","assets/map2.png","components/groupsOfCities/index.js","components/Scene.js","components/shader/vertex.glsl","components/shader/fragment.glsl","components/Wrapper.jsx","App.js","reportWebVitals.js","index.js"],"names":["Line","startXYZ","endXYZ","radius","scene","startAnimation","t1","play","drawAnimatedLine","getLatAndLong","start","end","R","Math","asin","z","atan2","y","x","toXYZ","lat","lon","cos","sin","drawRangeCount","gVanVal","value","add","endPointMesh","addedEndPoint","remove","startPointMesh","mesh","material","uniforms","u_vanishValue","vanVal","toFixed","Number","geometry","setDrawRange","this","startTime","performance","now","undefined","d3Interpolate","geoInterpolate","control1","control2","startV","THREE","endV","arcHeight","distanceTo","controlXYZ1","controlXYZ2","curve","computeBoundingSphere","computeBoundingBox","u_resolution","type","window","innerWidth","innerHeight","vertexShader","fragmentShader","simpleMaterial","color","pointGeometry","position","set","TimelineMax","onUpdate","to","duration","ease","Power2","easeIn","pause","groups","group1","group2","group3","group4","Renderer3D","dom","addListeners","addEventListener","onResize","onDocumentMouseDown","onDocumentTouchStart","onDocumentTouchMove","onDocumentTouchEnd","destroy","removeEventListener","addObjects","mapSphereMaterialData","map","load","transparent","materialFront","side","materialBack","opacity","depthTest","sphereFront","sphereBack","rotateY","hexagonSphereData","hexagonMaterialFront","hexagonMaterialBack","hexagonGeometry","hexagongSphereFront","hexagongSphereBack","img","group","positions","ptrGroups","all","length","outR","render","time","drawLinesBetweenPositionsRender","finalRotationY","targetRotationY","rotation","offsetY","targetRotationX","rotate","offsetTime","gsap","speed","rotationOffset","requestAnimationFrame","renderer","camera","pointToUv","u","PI","v","drawLine","i","localGroup","ptr","event","preventDefault","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseOut","mouseXOnMouseDown","clientX","windowHalfX","targetRotationOnMouseDownX","mouseYOnMouseDown","clientY","windowHalfY","targetRotationOnMouseDownY","mouseX","mouseY","touches","pageX","pageY","getImageData","canvas","document","createElement","width","height","context","getContext","drawImage","aspect","updateProjectionMatrix","setSize","antialias","setClearColor","appendChild","domElement","lookAt","Wrapper","ref","React","useRef","useEffect","Scene","current","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e9bb69e1.chunk.js","sourcesContent":["import * as THREE from \"three\";\r\nimport { geoInterpolate } from \"d3\";\r\nimport { Circ, Power2, TimelineMax } from \"gsap\";\r\nimport vertex from \"./lineShader/vertex.glsl\";\r\nimport fragment from \"./lineShader/fragment.glsl\";\r\n\r\nexport default class Line {\r\n  constructor(startXYZ, endXYZ, radius, scene) {\r\n    this.scene = scene;\r\n    this.startTime = performance.now();\r\n    this.addedEndPoint = false;\r\n\r\n    if (startXYZ !== undefined && endXYZ !== undefined) {\r\n      const [start, end] = this.getLatAndLong(startXYZ, endXYZ, radius);\r\n\r\n      const d3Interpolate = geoInterpolate(\r\n        [start[1], start[0]],\r\n        [end[1], end[0]]\r\n      );\r\n      const control1 = d3Interpolate(0.25);\r\n      const control2 = d3Interpolate(0.75);\r\n\r\n      const startV = new THREE.Vector2(start[0], start[1]);\r\n      const endV = new THREE.Vector2(end[0], end[1]);\r\n\r\n      const arcHeight = startV.distanceTo(endV) * 0.8 + radius * 1.35;\r\n\r\n      const controlXYZ1 = this.toXYZ(control1[1], control1[0], arcHeight);\r\n      const controlXYZ2 = this.toXYZ(control2[1], control2[0], arcHeight);\r\n\r\n      const curve = new THREE.CubicBezierCurve3(\r\n        startXYZ,\r\n        controlXYZ1,\r\n        controlXYZ2,\r\n        endXYZ\r\n      );\r\n\r\n      this.geometry = new THREE.TubeBufferGeometry(curve, 64, 0.02, 4);\r\n\r\n      this.geometry.computeBoundingSphere();\r\n      this.geometry.computeBoundingBox();\r\n      this.material = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n          u_resolution: {\r\n            type: \"v2\",\r\n            value: new THREE.Vector2(window.innerWidth, window.innerHeight),\r\n          },\r\n          u_vanishValue: { value: 0.0 },\r\n        },\r\n        vertexShader: vertex,\r\n        fragmentShader: fragment,\r\n      });\r\n      this.simpleMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });\r\n      const pointGeometry = new THREE.SphereGeometry(0.05, 32, 32);\r\n\r\n      this.startPointMesh = new THREE.Mesh(pointGeometry, this.simpleMaterial);\r\n      this.endPointMesh = new THREE.Mesh(pointGeometry, this.simpleMaterial);\r\n      this.mesh = new THREE.Mesh(this.geometry, this.material);\r\n      this.startPointMesh.position.set(startXYZ.x, startXYZ.y, startXYZ.z);\r\n      this.endPointMesh.position.set(endXYZ.x, endXYZ.y, endXYZ.z);\r\n\r\n      this.scene.add(this.mesh);\r\n      this.scene.add(this.startPointMesh);\r\n      this.gVanVal = {\r\n        value: 0,\r\n      };\r\n\r\n      this.geometry.setDrawRange(0, 1);\r\n      this.t1 = new TimelineMax({ onUpdate: this.drawAnimatedLine });\r\n      this.t1\r\n        .to(this.gVanVal, {\r\n          value: 0.51,\r\n          duration: 1.1,\r\n          ease: Power2.easeIn,\r\n        })\r\n        .to(\r\n          this.gVanVal,\r\n          {\r\n            value: 1,\r\n            duration: 5,\r\n          },\r\n          \"+=1\"\r\n        );\r\n      this.t1.pause();\r\n    }\r\n  }\r\n\r\n  startAnimation = () => {\r\n    if (this.t1) {\r\n      this.t1.play();\r\n      this.drawAnimatedLine();\r\n    }\r\n  };\r\n\r\n  getLatAndLong = (start, end, R) => {\r\n    return [\r\n      [Math.asin(start.z / R), Math.atan2(start.y, start.x)],\r\n      [Math.asin(end.z / R), Math.atan2(end.y, end.x)],\r\n    ];\r\n  };\r\n\r\n  toXYZ = (lat, lon, R) => {\r\n    return {\r\n      x: R * Math.cos(lat) * Math.cos(lon),\r\n      y: R * Math.cos(lat) * Math.sin(lon),\r\n      z: R * Math.sin(lat),\r\n    };\r\n  };\r\n\r\n  drawAnimatedLine = () => {\r\n    const drawRangeCount = this.gVanVal.value * 3000;\r\n\r\n    if (this.gVanVal.value < 0.999) {\r\n      if (this.gVanVal.value === 0.51) {\r\n        this.scene.add(this.endPointMesh);\r\n      }\r\n      if (this.gVanVal.value > 0.51) {\r\n        if (!this.addedEndPoint) {\r\n          this.scene.remove(this.startPointMesh);\r\n          this.addedEndPoint = true;\r\n        }\r\n        this.mesh.material.uniforms.u_vanishValue.value += 0.03;\r\n      }\r\n      const vanVal = this.mesh.material.uniforms.u_vanishValue.value.toFixed(1);\r\n      if (Number(vanVal) > 3) {\r\n        this.scene.remove(this.endPointMesh);\r\n      }\r\n      this.mesh.geometry.setDrawRange(0, drawRangeCount);\r\n      // requestAnimationFrame(this.drawAnimatedLine);\r\n    } else {\r\n      this.scene.remove(this.mesh);\r\n    }\r\n  };\r\n}\r\n","export default \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\\n}\";","export default \"#ifdef GL_ES\\nprecision mediump float;\\n#define GLSLIFY 1\\n#endif\\n\\nvarying vec2 vUv;\\nuniform vec2 u_resolution;\\nuniform float u_vanishValue;\\n\\nvoid main(void) {\\n\\tif (vUv.x < u_vanishValue) discard;\\n  gl_FragColor = vec4(1.);\\n}\\n\";","export default __webpack_public_path__ + \"static/media/map2.44adf478.png\";","const group1 = [\r\n  { x: 1.710651375385257, y: 2.5090000000000003, z: 3.972227444632612 }, // Telaviv\r\n\r\n  { x: 4.428914192259828, y: 1.747666666666666, z: -1.5265583185131515 }, // Taipei\r\n\r\n  { x: 2.2556385620402715, y: -3.6256666666666666, z: -2.6012758215266443 }, // GoldCost\r\n\r\n  { x: -0.3377278405015561, y: 1.2393333333333332, z: -4.832183025780278 }, // Gonolulu\r\n\r\n  { x: -3.697382157586577, y: 2.476000000000001, z: -2.3016144726605337 }, // San-diego\r\n\r\n  { x: -3.553819771080798, y: 2.718666666666667, z: -2.2314158263826083 }, // Los-Angeles\r\n\r\n  { x: -3.266468314656494, y: 3.2126666666666672, z: -2.056907810075653 }, // San-ancisco\r\n\r\n  { x: -1.5358207793708558, y: 4.64, z: -1.0543502898243542 }, // Anchorage\r\n\r\n  { x: -2.650080023570794, y: 4.046333333333333, z: -1.266594814542747 }, // Vancuver\r\n\r\n  { x: -4.310934142420775, y: 2.2713333333333336, z: -1.1211118180626518 }, //  Austin\r\n\r\n  { x: -4.358209461381206, y: 2.2706666666666666, z: -0.9219995551063066 }, // Houston\r\n\r\n  { x: -4.195660532084914, y: 2.54, z: -0.9720250508628521 }, // fort-worth\r\n];\r\n\r\nconst group2 = [\r\n  { x: -4.195660532084914, y: 2.54, z: -0.9720250508628521 }, // fort-worth\r\n\r\n  { x: -2.979752797046555, y: 3.725333333333334, z: -1.4976531053781394 }, // Portland\r\n\r\n  { x: -3.130552505715065, y: 3.655666666666667, z: -1.3548956532454253 }, // Montana\r\n\r\n  { x: -3.2614258099910263, y: 3.4399999999999995, z: -1.5904407206571323 }, // Boise\r\n\r\n  { x: -3.513931074153918, y: 3.210333333333333, z: -1.5316815253127471 }, // SaltLake\r\n\r\n  { x: -3.130552505715065, y: 3.655666666666667, z: -1.3548956532454253 }, // Montana\r\n\r\n  { x: -3.4489785996310713, y: 3.578666666666667, z: 0.5456111327454606 }, // Toronto\r\n\r\n  // Boston, New York, Rocky Hill\r\n  { x: -3.5465476925958477, y: 3.4319999999999995, z: 0.8021068907216012 },\r\n  { x: -3.522878126581114, y: 3.431666666666666, z: 0.9016615740649209 },\r\n  { x: -3.622940741209172, y: 3.357, z: 0.7777219205389136 },\r\n\r\n  { x: -3.625987298300832, y: 3.209333333333333, z: -1.2459517117916716 }, // Boulder\r\n\r\n  { x: -4.046106324632884, y: 2.7993333333333337, z: -0.8903687430804499 },\r\n  // Oklahoma\r\n\r\n  { x: -3.9230782662039445, y: 3.047333333333333, z: -0.5685213037290788 },\r\n  // Kansas missury\r\n\r\n  { x: -3.411406692838146, y: 3.6516666666666664, z: -0.16623757582046553 }, // Mineapolis\r\n\r\n  { x: -4.7318518850639215, y: 1.0119999999999998, z: 1.2591400787112663 },\r\n  // Puerto Rico\r\n];\r\n\r\nconst group3 = [\r\n  { x: -4.7318518850639215, y: 1.0119999999999998, z: 1.2591400787112663 },\r\n  // Puerto Rico\r\n\r\n  { x: -4.625882726551621, y: 1.895333333333333, z: 0.09444869372783954 },\r\n  // maiami\r\n\r\n  { x: -4.40772000180932, y: 2.358666666666667, z: -0.09325203057089464 },\r\n  // talahasi\r\n\r\n  { x: -4.4118565180010485, y: 2.2696666666666667, z: -0.6197864848428749 },\r\n  // new orlean\r\n\r\n  { x: -3.7199144834474733, y: 3.2809999999999997, z: 0.6302977358659355 },\r\n  // Philadelphia\r\n\r\n  { x: -3.7964824547684, y: 3.2033333333333336, z: 0.5704178522725737 },\r\n  // Baltimore\r\n\r\n  { x: -3.8705218117108786, y: 3.1243333333333334, z: 0.5075451972904068 },\r\n  // washington\r\n\r\n  { x: -3.8209314973718, y: 3.204, z: 0.36724173563484624 },\r\n  // Morgatown\r\n\r\n  { x: -4.215541309840821, y: 2.626333333333333, z: -0.5758339059553107 },\r\n  // oxford\r\n\r\n  { x: -4.2557673922922215, y: 2.624333333333333, z: 0.03631058052173312 },\r\n  // Atlanta\r\n\r\n  { x: -4.02699085765463, y: 2.9636666666666667, z: 0.00495189407372026 },\r\n  // Nashvile\r\n\r\n  { x: -3.834449611507624, y: 3.2056666666666667, z: -0.1438659064242023 },\r\n  // Springfield\r\n\r\n  { x: -3.8345176756005266, y: 3.2046666666666668, z: 0.1630513755314223 },\r\n  // Cincinati\r\n\r\n  { x: -3.963173378484142, y: 3.045, z: 0.14571126268957862 },\r\n  // frankfort\r\n];\r\n\r\nconst group4 = [\r\n  { x: -3.9013197001668516, y: 3.1256666666666666, z: 0.09956146834452805 },\r\n  // frankfort\r\n\r\n  { x: -3.940802606142463, y: 3.044, z: 0.4518172411725471 },\r\n  // Shortsvile\r\n\r\n  { x: -4.02699085765463, y: 2.9636666666666667, z: 0.00495189407372026 },\r\n  // Nashvile\r\n\r\n  { x: -4.076350211681477, y: 2.879666666666667, z: 0.30147776139088933 },\r\n  // Winston\r\n\r\n  { x: -4.067759852418044, y: 2.8793333333333337, z: 0.40344682253239206 },\r\n  // Darem\r\n\r\n  { x: -3.8921245180296387, y: 2.543, z: -1.8397058830564612 },\r\n  // tuson\r\n\r\n  { x: -3.7549996031390123, y: 2.717333333333334, z: -1.8751206723785574 },\r\n  // finiks\r\n\r\n  // buenos\r\n  { x: -2.4629911462663774, y: -4.218666666666667, z: 1.0660798136016785 },\r\n\r\n  // sanpaulo\r\n  { x: -3.016787943834778, y: -3.4416666666666664, z: 2.0134351386346387 }, //\r\n\r\n  { x: -0.6419809614203476, y: 4.203333333333333, z: 2.6305606501395657 },\r\n  // Dublin\r\n\r\n  { x: -0.5422444292457544, y: 4.203, z: 2.653443419210582 },\r\n  // Manchester\r\n\r\n  { x: -0.3790170837588278, y: 4.088000000000001, z: 2.8538749184606798 },\r\n  // London\r\n\r\n  { x: -0.14547927697130092, y: 4.145333333333333, z: 2.7919611987861623 },\r\n  // Amsterdam\r\n\r\n  { x: -0.02089508947360802, y: 3.633666666666666, z: 3.4345348958471 },\r\n  // Milan\r\n\r\n  { x: 1.710651375385257, y: 2.5090000000000003, z: 3.972227444632612 },\r\n  // tel aviv\r\n];\r\n\r\nconst groups = { group1, group2, group3, group4 };\r\n\r\nexport default groups;\r\n","import * as THREE from \"three\";\r\nimport Line from \"./Line\";\r\nimport gsap from \"gsap\";\r\nimport map from \"../assets/map2.png\";\r\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport vertex from \"./shader/vertex.glsl\";\r\nimport fragment from \"./shader/fragment.glsl\";\r\nimport groups from \"./groupsOfCities\";\r\n\r\n// const africaColor = { r: 0, g: 166, b: 255 };\r\nexport default class Renderer3D {\r\n  constructor(dom) {\r\n    this.dom = dom;\r\n\r\n    this.width = window.innerWidth;\r\n    this.height = window.innerHeight;\r\n    this.scene = new THREE.Scene();\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    this.renderer.setSize(this.width, this.height);\r\n    this.context = this.renderer.getContext(\"2d\");\r\n    // this.renderer.setPixelRatio(window.devicePixelRatio);\r\n    this.time = 0;\r\n    this.offsetTime = 0;\r\n    this.startTime = false;\r\n    this.speed = { value: 0 };\r\n    this.renderer.setClearColor(0x13344c, 1);\r\n    dom.appendChild(this.renderer.domElement);\r\n    this.group = new THREE.Group();\r\n    this.rotate = true;\r\n\r\n    this.targetRotationX = 0;\r\n    this.targetRotationOnMouseDownX = 0;\r\n\r\n    this.targetRotationY = 0;\r\n    this.targetRotationOnMouseDownY = 0;\r\n\r\n    this.mouseX = 0;\r\n    this.mouseXOnMouseDown = 0;\r\n\r\n    this.mouseY = 0;\r\n    this.mouseYOnMouseDown = 0;\r\n\r\n    this.windowHalfX = window.innerWidth / 2;\r\n    this.windowHalfY = window.innerHeight / 2;\r\n\r\n    this.rotationOffset = 0;\r\n\r\n    this.finalRotationY = null;\r\n\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      45,\r\n      this.width / this.height,\r\n      1,\r\n      1000\r\n    );\r\n\r\n    this.camera.position.set(0, 0, 20);\r\n    this.camera.lookAt(new THREE.Vector3());\r\n\r\n    this.addListeners();\r\n    this.addObjects();\r\n    this.render();\r\n  }\r\n\r\n  addListeners = () => {\r\n    window.addEventListener(\"resize\", this.onResize);\r\n    this.dom.addEventListener(\"mousedown\", this.onDocumentMouseDown, false);\r\n    this.dom.addEventListener(\"touchstart\", this.onDocumentTouchStart, false);\r\n    this.dom.addEventListener(\"touchmove\", this.onDocumentTouchMove, false);\r\n    this.dom.addEventListener(\"touchend\", this.onDocumentTouchEnd, false);\r\n  };\r\n\r\n  destroy = () => {\r\n    window.removeEventListener(\"resize\", this.onResize);\r\n    this.dom.removeEventListener(\"mousedown\", this.onDocumentMouseDown);\r\n    this.dom.removeEventListener(\"touchstart\", this.onDocumentTouchStart);\r\n    this.dom.removeEventListener(\"touchmove\", this.onDocumentTouchMove);\r\n    this.dom.removeEventListener(\"touchend\", this.onDocumentTouchEnd);\r\n  };\r\n\r\n  addObjects = () => {\r\n    const geometry = new THREE.SphereGeometry(5, 64, 64);\r\n\r\n    const texture = new THREE.TextureLoader().load(map);\r\n    const mapSphereMaterialData = {\r\n      map: texture,\r\n      transparent: true,\r\n    };\r\n    const materialFront = new THREE.MeshBasicMaterial({\r\n      ...mapSphereMaterialData,\r\n      side: THREE.FrontSide,\r\n    });\r\n\r\n    const materialBack = new THREE.MeshBasicMaterial({\r\n      ...mapSphereMaterialData,\r\n      side: THREE.BackSide,\r\n      opacity: 0.3,\r\n      depthTest: false,\r\n    });\r\n\r\n    this.sphereFront = new THREE.Mesh(geometry, materialFront);\r\n    this.sphereBack = new THREE.Mesh(geometry, materialBack);\r\n    this.sphereFront.rotateY(55);\r\n    this.sphereBack.rotateY(55);\r\n\r\n    const hexagonSphereData = {\r\n      uniforms: {\r\n        u_resolution: {\r\n          type: \"v2\",\r\n          value: new THREE.Vector2(window.innerWidth, window.innerHeight),\r\n        },\r\n      },\r\n      vertexShader: vertex,\r\n      fragmentShader: fragment,\r\n      depthTest: false,\r\n      transparent: true,\r\n    };\r\n\r\n    const hexagonMaterialFront = new THREE.ShaderMaterial({\r\n      ...hexagonSphereData,\r\n      side: THREE.FrontSide,\r\n    });\r\n\r\n    const hexagonMaterialBack = new THREE.ShaderMaterial({\r\n      ...hexagonSphereData,\r\n      side: THREE.BackSide,\r\n    });\r\n\r\n    const hexagonGeometry = new THREE.SphereGeometry(5, 12, 12);\r\n\r\n    const hexagongSphereFront = new THREE.Mesh(\r\n      hexagonGeometry,\r\n      hexagonMaterialFront\r\n    );\r\n    const hexagongSphereBack = new THREE.Mesh(\r\n      hexagonGeometry,\r\n      hexagonMaterialBack\r\n    );\r\n\r\n    new THREE.ImageLoader().load(map, (img) => {\r\n      this.group.add(this.sphereBack);\r\n      this.group.add(this.sphereFront);\r\n      this.group.add(hexagongSphereFront);\r\n      this.group.add(hexagongSphereBack);\r\n\r\n      // const imageData = this.getImageData(img);\r\n      // const DOT_COUNT = 30000;\r\n\r\n      // const dotGeometry = new THREE.CircleGeometry(0.03, 5);\r\n      // const materialDot = new THREE.MeshBasicMaterial({\r\n      //   color: 0xffff00,\r\n      //   side: THREE.DoubleSide,\r\n      // });\r\n      this.positions = [];\r\n      this.ptrGroups = [\r\n        { all: groups.group1.length - 1, now: -1 },\r\n        { all: groups.group2.length - 1, now: -1 },\r\n        { all: groups.group3.length - 1, now: -1 },\r\n        { all: groups.group4.length - 1, now: -1 },\r\n      ];\r\n\r\n      // const radius = 1;\r\n      this.outR = 5;\r\n      // const sizeMap = { x: 2600, y: 1228 };\r\n\r\n      // for (let i = 0; i < groups.group4.length; i++) {\r\n      //   this.positions.push(groups.group4[i]);\r\n      //   dotGeometry.lookAt(new THREE.Vector3(0, 0, 0));\r\n      //   const dotMesh = new THREE.Mesh(dotGeometry, materialDot);\r\n      //   dotMesh.position.set(\r\n      //     groups.group4[i].x,\r\n      //     groups.group4[i].y,\r\n      //     groups.group4[i].z\r\n      //   );\r\n      //   dotMesh.lookAt(new THREE.Vector3(0, 0, 0));\r\n      //   this.group.add(dotMesh);\r\n      // }\r\n\r\n      // for (let i = DOT_COUNT; i >= 0; i--) {\r\n      //   // continue;\r\n      //   const vector = new THREE.Vector3();\r\n      //   const phi = Math.acos(-1 + (2 * i) / DOT_COUNT);\r\n      //   const theta = Math.sqrt(DOT_COUNT * Math.PI) * phi;\r\n      //   vector.setFromSphericalCoords(radius, phi, theta);\r\n      //   dotGeometry.lookAt(new THREE.Vector3(0, 0, 0));\r\n      //   dotGeometry.translate(vector.x, vector.y, vector.z);\r\n      //   vector.x /= radius;\r\n      //   vector.y /= radius;\r\n      //   vector.z /= radius;\r\n      //   dotGeometry.computeBoundingSphere();\r\n      //   const uv = this.pointToUv(vector);\r\n      //   const sample = imageData.getImageData(\r\n      //     uv.u * sizeMap.x,\r\n      //     uv.v * sizeMap.y,\r\n      //     1,\r\n      //     1\r\n      //   ).data;\r\n      //   if (sample[1] <= africaColor.g - 1 || sample[1] >= africaColor.g + 1)\r\n      //     continue;\r\n      //   const dotMesh = new THREE.Mesh(dotGeometry, materialDot);\r\n      //   dotMesh.position.set(vector.x * 5.1, vector.y * 5.1, vector.z * 5.1);\r\n      //   dotMesh.lookAt(new THREE.Vector3(0, 0, 0));\r\n      //   this.group.add(dotMesh);\r\n      //   this.positions.push({\r\n      //     x: vector.x * this.outR,\r\n      //     y: vector.y * this.outR,\r\n      //     z: vector.z * this.outR,\r\n      //   });\r\n      //   console.log(this.positions);\r\n      // }\r\n      this.scene.add(this.group);\r\n      this.startTime = true;\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    if (this.startTime) {\r\n      this.time += 0.1;\r\n      this.drawLinesBetweenPositionsRender();\r\n\r\n      this.finalRotationY = this.targetRotationY - this.group.rotation.x;\r\n      const offsetY = (this.targetRotationX - this.group.rotation.y) * 0.1;\r\n\r\n      if (\r\n        this.rotate &&\r\n        ((this.time - this.offsetTime).toFixed(1) > 3 || this.offsetTime === 0)\r\n      ) {\r\n        gsap.to(this.speed, {\r\n          value: 0.004,\r\n          duration: 1,\r\n        });\r\n        this.group.rotation.y += this.speed.value;\r\n        this.rotationOffset = offsetY;\r\n        this.offsetTime = 0;\r\n      } else {\r\n        this.speed.value = 0;\r\n        this.group.rotation.y +=\r\n          (this.targetRotationX - this.group.rotation.y) * 0.1 -\r\n          this.rotationOffset;\r\n\r\n        // if (this.group.rotation.x <= 1 && this.group.rotation.x >= -1) {\r\n        //   this.group.rotation.x += this.finalRotationY * 0.1;\r\n        // }\r\n        // if (this.group.rotation.x > 1) {\r\n        //   this.group.rotation.x = 1;\r\n        // }\r\n\r\n        // if (this.group.rotation.x < -1) {\r\n        //   this.group.rotation.x = -1;\r\n        // }\r\n      }\r\n    }\r\n\r\n    requestAnimationFrame(this.render);\r\n    this.renderer.render(this.scene, this.camera);\r\n  };\r\n\r\n  pointToUv = ({ x, y, z }) => {\r\n    const u = 0.5 + Math.atan2(x, z) / (2 * Math.PI);\r\n    const v = 0.5 - Math.asin(y) / Math.PI;\r\n    return {\r\n      u,\r\n      v,\r\n    };\r\n  };\r\n\r\n  drawLinesBetweenPositionsRender = () => {\r\n    if (this.time.toFixed(1) % 24 === 0) {\r\n      this.drawLine(0);\r\n    } else if (this.time.toFixed(1) % 25 === 0) {\r\n      this.drawLine(1);\r\n    } else if (this.time.toFixed(1) % 26 === 0) {\r\n      this.drawLine(2);\r\n    } else if (this.time.toFixed(1) % 27 === 0) {\r\n      this.drawLine(3);\r\n    }\r\n  };\r\n\r\n  drawLine = (i) => {\r\n    const localGroup = groups[`group${i + 1}`];\r\n    this.ptrGroups[i].now =\r\n      (this.ptrGroups[i].now + 1) % (this.ptrGroups[i].all - 1);\r\n    const ptr = this.ptrGroups[i].now;\r\n    const l = new Line(\r\n      localGroup[ptr],\r\n      localGroup[ptr + 1],\r\n      this.outR,\r\n      this.group\r\n    );\r\n    l.startAnimation();\r\n  };\r\n\r\n  onDocumentMouseDown = (event) => {\r\n    this.rotate = false;\r\n    event.preventDefault();\r\n\r\n    this.dom.addEventListener(\"mousemove\", this.onDocumentMouseMove, false);\r\n    this.dom.addEventListener(\"mouseup\", this.onDocumentMouseUp, false);\r\n    this.dom.addEventListener(\"mouseout\", this.onDocumentMouseOut, false);\r\n\r\n    this.mouseXOnMouseDown = event.clientX - this.windowHalfX;\r\n    this.targetRotationOnMouseDownX = this.targetRotationX;\r\n\r\n    this.mouseYOnMouseDown = event.clientY - this.windowHalfY;\r\n    this.targetRotationOnMouseDownY = this.targetRotationY;\r\n  };\r\n\r\n  onDocumentMouseMove = (event) => {\r\n    this.mouseX = event.clientX - this.windowHalfX;\r\n    this.mouseY = event.clientY - this.windowHalfY;\r\n\r\n    this.targetRotationY =\r\n      this.targetRotationOnMouseDownY +\r\n      (this.mouseY - this.mouseYOnMouseDown) * 0.002;\r\n    this.targetRotationX =\r\n      this.targetRotationOnMouseDownX +\r\n      (this.mouseX - this.mouseXOnMouseDown) * 0.002;\r\n  };\r\n\r\n  onDocumentMouseUp = () => {\r\n    this.rotate = true;\r\n    this.offsetTime = this.time;\r\n    this.dom.removeEventListener(\"mousemove\", this.onDocumentMouseMove, false);\r\n    this.dom.removeEventListener(\"mouseup\", this.onDocumentMouseUp, false);\r\n    this.dom.removeEventListener(\"mouseout\", this.onDocumentMouseOut, false);\r\n  };\r\n\r\n  onDocumentMouseOut = () => {\r\n    this.rotate = true;\r\n    this.offsetTime = this.time;\r\n    this.dom.removeEventListener(\"mousemove\", this.onDocumentMouseMove, false);\r\n    this.dom.removeEventListener(\"mouseup\", this.onDocumentMouseUp, false);\r\n    this.dom.removeEventListener(\"mouseout\", this.onDocumentMouseOut, false);\r\n  };\r\n\r\n  onDocumentTouchStart = (event) => {\r\n    if (event.touches.length === 1) {\r\n      this.rotate = false;\r\n      event.preventDefault();\r\n\r\n      this.mouseXOnMouseDown = event.touches[0].pageX - this.windowHalfX;\r\n      this.targetRotationOnMouseDownX = this.targetRotationX;\r\n\r\n      this.mouseYOnMouseDown = event.touches[0].pageY - this.windowHalfY;\r\n      this.targetRotationOnMouseDownY = this.targetRotationY;\r\n    }\r\n  };\r\n\r\n  onDocumentTouchMove = (event) => {\r\n    if (event.touches.length === 1) {\r\n      event.preventDefault();\r\n\r\n      this.mouseX = event.touches[0].pageX - this.windowHalfX;\r\n      this.targetRotationX =\r\n        this.targetRotationOnMouseDownX +\r\n        (this.mouseX - this.mouseXOnMouseDown) * 0.01;\r\n\r\n      this.mouseY = event.touches[0].pageY - this.windowHalfY;\r\n      this.targetRotationY =\r\n        this.targetRotationOnMouseDownY +\r\n        (this.mouseY - this.mouseYOnMouseDown) * 0.01;\r\n    }\r\n  };\r\n\r\n  onDocumentTouchEnd = () => {\r\n    this.rotate = true;\r\n    this.offsetTime = this.time;\r\n  };\r\n\r\n  getImageData = (img) => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    const context = canvas.getContext(\"2d\");\r\n    canvas.getContext(\"2d\").drawImage(img, 0, 0, img.width, img.height);\r\n    return context;\r\n  };\r\n\r\n  onResize = () => {\r\n    this.width = window.innerWidth;\r\n    this.height = window.innerHeight;\r\n\r\n    this.camera.aspect = this.width / this.height;\r\n\r\n    this.camera.updateProjectionMatrix();\r\n    this.renderer.setSize(this.width, this.height);\r\n  };\r\n}\r\n","export default \"#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\n\\nvoid main() {\\n  vUv = uv;\\n  vPosition = position;\\n  vNormal = normalize(normalMatrix * normal);\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\\n}\";","export default \"#ifdef GL_ES\\nprecision mediump float;\\n#define GLSLIFY 1\\n#endif\\n\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nuniform vec2 u_resolution;\\n\\nfloat hex(vec2 p) {\\n  p.x *= 0.57735*2.0;\\n\\tp.y += mod(floor(p.x), 2.0) * 0.5;\\n\\tp = abs((mod(p, 1.0) - 0.5));\\n\\treturn abs(max(p.x * 1.5 + p.y, p.y * 2.0) - 0.9);\\n}\\n\\nvoid main(void) {\\n\\tvec2 pos = vUv.xy / 3.;\\n  pos.x *= 2.;\\n\\n\\tvec2 p = pos / 0.01; \\n\\tfloat  r = (1.0 - 0.6)*0.4;\\t\\n\\tvec4 hexagon = vec4(smoothstep(0.1, r - 0.1, hex(p)));\\n  gl_FragColor = vec4(hexagon.x, hexagon.y, hexagon.z, 0.1);\\n}\\n\";","/* eslint-disable */\r\nimport React from \"react\";\r\nimport \"./Wrapper.css\";\r\nimport Scene from \"./Scene\";\r\n\r\nconst Wrapper = () => {\r\n  const ref = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    const scene = new Scene(ref.current);\r\n\r\n    return () => scene.destroy();\r\n  }, [ref]);\r\n\r\n  return <div className=\"root\" ref={ref} />;\r\n};\r\n\r\nexport default Wrapper;\r\n","import \"./App.css\";\nimport Wrapper from \"./components/Wrapper\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Wrapper />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}